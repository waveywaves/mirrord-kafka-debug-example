version: '3'
services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=KafkaCluster1
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  producer:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "6002:5000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=test-topic
      - APP_MODE=producer
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./templates:/app/templates
    healthcheck:
      test: curl --fail http://localhost:5000/status || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "6001:5000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=test-topic
      - APP_MODE=consumer
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./templates:/app/templates
    healthcheck:
      test: curl --fail http://localhost:5000/status || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  kafka_data: 